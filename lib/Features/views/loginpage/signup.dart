import 'package:flutter/material.dart';
import 'package:flutter_application_1/Data/Modals/json.dart';
import 'package:flutter_application_1/constants/colors.dart';
import 'package:get/get.dart';
import 'package:google_fonts/google_fonts.dart';

class SignUpPage extends StatefulWidget {
  const SignUpPage({super.key});

  @override
  _SignUpPageState createState() => _SignUpPageState();
}

class _SignUpPageState extends State<SignUpPage> {
  final TextEditingController firstnameController = TextEditingController();
  final TextEditingController lastnameController = TextEditingController();
  final TextEditingController usernameController = TextEditingController();
  final TextEditingController emailController = TextEditingController();
  final TextEditingController passwordController = TextEditingController();

  // Boolean to toggle password visibility
  bool _obscureText = true;

  // Function to validate inputs
  bool _validateInputs() {
    String firstname = firstnameController.text.trim();
    String lastname = lastnameController.text.trim();
    String username = usernameController.text.trim();
    String email = emailController.text.trim();
    String password = passwordController.text.trim();

    // Regular expression for validating inputs
    String namePattern = r'^[a-zA-Z]+$';
    String usernamePattern = r'^[a-zA-Z0-9]+$';
    String emailPattern = r'^[a-zA-Z0-9]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$';
    RegExp nameRegex = RegExp(namePattern);
    RegExp usernameRegex = RegExp(usernamePattern);
    RegExp emailRegex = RegExp(emailPattern);

    if (firstname.isEmpty || !nameRegex.hasMatch(firstname)) {
      Get.snackbar(
        "Invalid Firstname",
        "Please enter a valid Firstname.",
        backgroundColor: Colors.redAccent,
        colorText: Colors.white,
      );
      return false;
    }

    if (lastname.isNotEmpty && !nameRegex.hasMatch(lastname)) {
      Get.snackbar(
        "Invalid Lastname",
        "Lastname can only contain letters.",
        backgroundColor: Colors.redAccent,
        colorText: Colors.white,
      );
      return false;
    }

    if (username.isEmpty || !usernameRegex.hasMatch(username)) {
      Get.snackbar(
        "Invalid Username",
        "Please enter a valid Username.",
        backgroundColor: Colors.redAccent,
        colorText: Colors.white,
      );
      return false;
    }

    if (email.isEmpty || !emailRegex.hasMatch(email)) {
      Get.snackbar(
        "Invalid Email",
        "Please enter a valid Email address.",
        backgroundColor: Colors.redAccent,
        colorText: Colors.white,
      );
      return false;
    }

    if (password.isEmpty || password.length < 6) {
      Get.snackbar(
        "Invalid Password",
        "Password must be at least 6 characters long.",
        backgroundColor: Colors.redAccent,
        colorText: Colors.white,
      );
      return false;
    }

    return true;
  }

  // Function to handle user signup
  void _signUpUser() {
    if (_validateInputs()) {
      final user = Autogenerated(
        firstname: firstnameController.text.trim(),
        lastname: lastnameController.text.trim(),
        username: usernameController.text.trim(),
        email: emailController.text.trim(),
        password: passwordController.text.trim(),
      );

      // Print user details (Replace with backend integration)
      print("User Details: ${user.toJson()}");

      // Navigate to the home page
      Get.toNamed("/home");
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(
          "Sign Up",
          style: TextStyle(color: AppColors.secondaryColor),
        ),
        backgroundColor: AppColors.primaryColor,
      ),
      body: Padding(
        padding: const EdgeInsets.all(20.0),
        child: SingleChildScrollView(
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              Text(
                "Register Here",
                style: GoogleFonts.roboto(
                  color: AppColors.primaryColor,
                  fontWeight: FontWeight.bold,
                  fontSize: 30,
                ),
              ),
              SizedBox(height: 10),
              TextField(
                controller: firstnameController,
                decoration: InputDecoration(
                  labelText: "First Name",
                  border: OutlineInputBorder(
                    borderRadius: BorderRadius.circular(10),
                  ),
                  prefixIcon: Icon(Icons.person, color: AppColors.primaryColor),
                ),
              ),
              SizedBox(height: 20),
              TextField(
                controller: lastnameController,
                decoration: InputDecoration(
                  labelText: "Last Name (Optional)",
                  border: OutlineInputBorder(
                    borderRadius: BorderRadius.circular(10),
                  ),
                  prefixIcon: Icon(Icons.person, color: AppColors.primaryColor),
                ),
              ),
              SizedBox(height: 20),
              TextField(
                controller: usernameController,
                decoration: InputDecoration(
                  labelText: "Username",
                  border: OutlineInputBorder(
                    borderRadius: BorderRadius.circular(10),
                  ),
                  prefixIcon: Icon(Icons.person, color: AppColors.primaryColor),
                ),
              ),
              SizedBox(height: 20),
              TextField(
                controller: emailController,
                keyboardType: TextInputType.emailAddress,
                decoration: InputDecoration(
                  labelText: "Email",
                  border: OutlineInputBorder(
                    borderRadius: BorderRadius.circular(10),
                  ),
                  prefixIcon: Icon(Icons.email, color: AppColors.primaryColor),
                ),
              ),
              SizedBox(height: 20),
              TextField(
                controller: passwordController,
                obscureText: _obscureText,
                decoration: InputDecoration(
                  labelText: "Password",
                  border: OutlineInputBorder(
                    borderRadius: BorderRadius.circular(10),
                  ),
                  prefixIcon: Icon(Icons.lock, color: AppColors.primaryColor),
                  suffixIcon: IconButton(
                    icon: Icon(
                      _obscureText ? Icons.visibility_off : Icons.visibility,
                      color: AppColors.primaryColor,
                    ),
                    onPressed: () {
                      setState(() {
                        _obscureText = !_obscureText;
                      });
                    },
                  ),
                ),
              ),
              SizedBox(height: 20),
              ElevatedButton(
                onPressed: _signUpUser,
                style: ElevatedButton.styleFrom(
                  backgroundColor: AppColors.primaryColor,
                  padding: EdgeInsets.symmetric(vertical: 15, horizontal: 80),
                  shape: RoundedRectangleBorder(
                    borderRadius: BorderRadius.circular(10),
                  ),
                ),
                child: Text(
                  "SIGN UP",
                  style:
                      TextStyle(color: AppColors.secondaryColor, fontSize: 18),
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }
}
